/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HW2;

import java.net.*;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ChatServer {
    
    public static List<Advertising> readData(String fileName) {
        List<Advertising> advertising = new ArrayList<Advertising>();

        try {
            File file = new File(fileName);
            Scanner reader = new Scanner(file);
            
            //headers//
            String hdata = reader.nextLine();
            StringTokenizer htokens = new StringTokenizer(hdata, ",");

            // get data 
            String hTV = htokens.nextToken();
            String hRadio = htokens.nextToken();
            String hNewspaper = htokens.nextToken();
            String hSales = htokens.nextToken();
            
            // create a row and add to the list
            advertising.add(new Advertising(hTV, hRadio, hNewspaper, hSales));
            //headers//
            
            while (reader.hasNextLine()) {
                String data = reader.nextLine();
                StringTokenizer tokens = new StringTokenizer(data, ",");

                // get data 
                double TV = Double.parseDouble(tokens.nextToken());
                double Radio = Double.parseDouble(tokens.nextToken());
                double Newspaper = Double.parseDouble(tokens.nextToken());
                double Sales = Double.parseDouble(tokens.nextToken());

                // create a row and add to the list
                advertising.add(new Advertising(TV, Radio, Newspaper, Sales));
            }
            reader.close();
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }

        return advertising;
    }

    public static void writeData(String fileName, List<Advertising> advert) {
        try {
            FileWriter writer = new FileWriter(fileName);

            // save data
            int i = 0;
            for (Advertising advertising : advert) {
                if(i==0){
                    String hTV = advertising.gethTV();
                    String hRadio = advertising.gethRadio();
                    String hNewspaper = advertising.gethNewspaper();
                    String hSales = advertising.gethSales();
                    writer.write(hTV + "," + hRadio + "," + hNewspaper + "," + hSales + "\n");
                    i=1;
                }else{
                    double TV = advertising.getTV();
                    double Radio = advertising.getRadio();
                    double Newspaper = advertising.getNewspaper();
                    double Sales = advertising.getSales();
                    writer.write(TV + "," + Radio + "," + Newspaper + "," + Sales + "\n");
                }
            }
            writer.close();
            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    

    public static void main(String args[]) {
        try {
            int port = 1999;
            ObjectInputStream fromClient = null;
            ObjectOutputStream toClient = null;
            String serverDir = "D:\\University\\3rd year\\Distributed System\\code\\(2)ds2\\(4)step1\\Server\\new_copy.csv";

            ServerSocket server = new ServerSocket(port);
            System.out.println("Server started: " + server);
            System.out.println("Waiting for a client ...");

            Socket socket = server.accept();
            System.out.println("Client accepted: " + socket);

            // open stream
            DataInputStream streamIn = 
                            new DataInputStream(socket.getInputStream());
            
            fromClient = new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));
            toClient = new ObjectOutputStream(new BufferedOutputStream(socket.getOutputStream()));
            
            boolean done = false;
            while (!done) {				
                try {
                    // read data from client
                    String line = streamIn.readUTF();
                    System.out.println(line);
                    
                    List<Advertising> serverList = ChatClient.readData(serverDir);
                    switch (line){
                        case ".cpy":
                            List<Advertising> listRequest = (List<Advertising>) fromClient.readObject();
                            System.out.println(listRequest);
                            ChatServer.writeData(serverDir, listRequest);
                            break;
                        case ".sumTV":
                            double sumTV = 0.0;
                            for(int i = 1; i < serverList.size(); i++){
                                sumTV = sumTV + serverList.get(i).getTV();
                            }
                            System.out.println(sumTV);
                            toClient.writeObject(new Message(sumTV));
                            toClient.flush();
                            
                        case ".sumRadio":
                            double sumRadio = 0.0;
                            for(int i = 1; i < serverList.size(); i++){
                                sumRadio = sumRadio + serverList.get(i).getRadio();
                            }
                            System.out.println(sumRadio);
                            toClient.writeObject(new Message(sumRadio));
                            toClient.flush();
                            
                        case ".sumNews":
                            double sumNews = 0.0;
                            for(int i = 1; i < serverList.size(); i++){
                                sumNews = sumNews + serverList.get(i).getNewspaper();
                            }
                            System.out.println(sumNews);
                            toClient.writeObject(new Message(sumNews));
                            toClient.flush();
                            
                    }
                    
                    // check if the program is over.
                    done = line.equals(".bye");
                } catch (IOException ioe) {
                    done = true;
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ChatServer.class.getName()).log(Level.SEVERE, null, ex);
                } catch(NullPointerException e){
                    System.out.print("NullPointerException Caught");
                }
            }
            streamIn.close();
            socket.close();
            server.close();
        } catch (IOException ioe) {
                System.out.println(ioe);
        }
    }
}
